//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Travel"",
            ""id"": ""72491721-2efc-458e-bf23-fdd6753a0360"",
            ""actions"": [
                {
                    ""name"": ""Forward"",
                    ""type"": ""Button"",
                    ""id"": ""685d0bf4-6692-4097-8fb9-330bcfdf96b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Backward"",
                    ""type"": ""Button"",
                    ""id"": ""14a22db7-378b-465f-bd9d-75a6cc72a1b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StrafeLeft"",
                    ""type"": ""Button"",
                    ""id"": ""51870fc9-de24-499c-9f6e-788b5119b497"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StrafeRight"",
                    ""type"": ""Button"",
                    ""id"": ""6db8fec8-a52a-41bb-ae40-99c2745767f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TurnLeft"",
                    ""type"": ""Button"",
                    ""id"": ""69cc6014-9309-4ad8-9643-5bf0383b8edd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TurnRight"",
                    ""type"": ""Button"",
                    ""id"": ""3d664da5-e4ed-44ef-acfd-50bafd6964b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FreeLook"",
                    ""type"": ""Button"",
                    ""id"": ""43d383cf-0dc4-4b7d-ba9f-fa9efb51046e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b36bc718-1f1b-4a17-9900-cc13a326e2eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""53f5c07b-34e4-47e2-baf4-428bfb6bf36e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""edd11aa4-af43-4fd5-bf36-3dcc7ec43a20"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dd1bb9a-14e0-4ce0-99dc-d3bba702d24c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe1d04f8-3897-492c-b195-676102466a1c"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef91f9f3-1c7b-45af-8a5b-6980b5ca51e1"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StrafeLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcbe5a6d-8421-47d4-9072-8c674897c132"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StrafeLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fb29ff9-67bc-48e0-8c89-6301440b5deb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StrafeRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2873075f-7c2d-4336-b031-eb0fed256cab"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StrafeRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e2b4546-d61c-4acc-aa64-cb3017b85d1e"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6273d002-650b-4f0e-a5d3-e6e2f83118a2"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94b3be7d-f7ec-4328-8924-686f45177383"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c72568c-f9c3-4042-ba12-b9ec09f5638d"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ace6648-47d0-4774-8081-828d32878f17"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FreeLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29f52a36-8b8a-44b3-bd4a-0d7fb0dcb4e4"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FreeLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8bafa89-ba14-454b-ae05-a915141e28df"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e952ac03-6a51-45ed-85a6-104f49f653b2"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Battle"",
            ""id"": ""0f8ac6eb-8730-4490-9b1e-f61a16c4060a"",
            ""actions"": [
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""9f9a60d8-1d12-4e51-a228-6f44cea243dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""f26c10c6-92a0-4b60-a65c-6beeecd8e61e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""711b34fc-b543-439e-b5a1-045dde72c3c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectNext"",
                    ""type"": ""Button"",
                    ""id"": ""9bf61633-9d28-4c10-898c-e4c891bec468"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectPrevious"",
                    ""type"": ""Button"",
                    ""id"": ""4d4c9bdf-613c-479b-9c8b-05f369f069a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScrollDown"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5e7772cf-6b49-41f9-8423-cb1331682531"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScrollUp"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9bff6602-4ad6-48da-a68e-7a9f7a286c7e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e08fe721-f945-4d55-877e-b73183f563f0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b77e9dd9-e748-424e-99ec-42eecd929341"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e0a1179-c4b5-4205-8277-167d2f86b5f6"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60342c2c-dfb5-4adc-9e7f-1dc5102238db"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5518c97a-0a07-47b9-9153-1c95792b4a3f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6eefb5dc-e872-4da1-b55e-1920c5560191"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f6003d1-57d0-49c3-b7c8-efffd38694c2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68dc7121-072c-42d8-82c5-281df8ebf496"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46a4cdf2-b066-4356-88e6-a753f40274fb"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9505ca2-7fa2-47a2-832e-3f2aaeb6ecd0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2d869ba-15f2-4e7e-a580-6195ca6a2ab5"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c4930bc-6427-459f-b52d-ce5e1ff5ccf0"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9acdd5fb-bb29-4532-a510-8168278753f4"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1edf7cb3-2681-4a9c-945e-9af590db6dc7"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e26b5dc6-b085-4d29-832b-475324e7a79d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectPrevious"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fef2c722-5abf-4cc3-b99a-b625df628a8f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectPrevious"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac895fbc-0ae7-4a1d-9c12-084ba26c5b96"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectPrevious"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02300456-32a9-410b-800e-b47c20afecaa"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectPrevious"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88bbf782-2af5-495a-89bc-7b4ce89edfc6"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectPrevious"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82b08006-0908-4e34-8792-49854fda88a6"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectPrevious"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ec8f9b0-d855-4463-aa56-47ac5df7dc70"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScrollDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6e72eef-c2dc-426e-ba1d-e2d0edc0583a"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScrollUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Travel
        m_Travel = asset.FindActionMap("Travel", throwIfNotFound: true);
        m_Travel_Forward = m_Travel.FindAction("Forward", throwIfNotFound: true);
        m_Travel_Backward = m_Travel.FindAction("Backward", throwIfNotFound: true);
        m_Travel_StrafeLeft = m_Travel.FindAction("StrafeLeft", throwIfNotFound: true);
        m_Travel_StrafeRight = m_Travel.FindAction("StrafeRight", throwIfNotFound: true);
        m_Travel_TurnLeft = m_Travel.FindAction("TurnLeft", throwIfNotFound: true);
        m_Travel_TurnRight = m_Travel.FindAction("TurnRight", throwIfNotFound: true);
        m_Travel_FreeLook = m_Travel.FindAction("FreeLook", throwIfNotFound: true);
        m_Travel_Interact = m_Travel.FindAction("Interact", throwIfNotFound: true);
        // Battle
        m_Battle = asset.FindActionMap("Battle", throwIfNotFound: true);
        m_Battle_Confirm = m_Battle.FindAction("Confirm", throwIfNotFound: true);
        m_Battle_Cancel = m_Battle.FindAction("Cancel", throwIfNotFound: true);
        m_Battle_Pause = m_Battle.FindAction("Pause", throwIfNotFound: true);
        m_Battle_SelectNext = m_Battle.FindAction("SelectNext", throwIfNotFound: true);
        m_Battle_SelectPrevious = m_Battle.FindAction("SelectPrevious", throwIfNotFound: true);
        m_Battle_MouseScrollDown = m_Battle.FindAction("MouseScrollDown", throwIfNotFound: true);
        m_Battle_MouseScrollUp = m_Battle.FindAction("MouseScrollUp", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Travel
    private readonly InputActionMap m_Travel;
    private List<ITravelActions> m_TravelActionsCallbackInterfaces = new List<ITravelActions>();
    private readonly InputAction m_Travel_Forward;
    private readonly InputAction m_Travel_Backward;
    private readonly InputAction m_Travel_StrafeLeft;
    private readonly InputAction m_Travel_StrafeRight;
    private readonly InputAction m_Travel_TurnLeft;
    private readonly InputAction m_Travel_TurnRight;
    private readonly InputAction m_Travel_FreeLook;
    private readonly InputAction m_Travel_Interact;
    public struct TravelActions
    {
        private @PlayerControls m_Wrapper;
        public TravelActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Forward => m_Wrapper.m_Travel_Forward;
        public InputAction @Backward => m_Wrapper.m_Travel_Backward;
        public InputAction @StrafeLeft => m_Wrapper.m_Travel_StrafeLeft;
        public InputAction @StrafeRight => m_Wrapper.m_Travel_StrafeRight;
        public InputAction @TurnLeft => m_Wrapper.m_Travel_TurnLeft;
        public InputAction @TurnRight => m_Wrapper.m_Travel_TurnRight;
        public InputAction @FreeLook => m_Wrapper.m_Travel_FreeLook;
        public InputAction @Interact => m_Wrapper.m_Travel_Interact;
        public InputActionMap Get() { return m_Wrapper.m_Travel; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TravelActions set) { return set.Get(); }
        public void AddCallbacks(ITravelActions instance)
        {
            if (instance == null || m_Wrapper.m_TravelActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TravelActionsCallbackInterfaces.Add(instance);
            @Forward.started += instance.OnForward;
            @Forward.performed += instance.OnForward;
            @Forward.canceled += instance.OnForward;
            @Backward.started += instance.OnBackward;
            @Backward.performed += instance.OnBackward;
            @Backward.canceled += instance.OnBackward;
            @StrafeLeft.started += instance.OnStrafeLeft;
            @StrafeLeft.performed += instance.OnStrafeLeft;
            @StrafeLeft.canceled += instance.OnStrafeLeft;
            @StrafeRight.started += instance.OnStrafeRight;
            @StrafeRight.performed += instance.OnStrafeRight;
            @StrafeRight.canceled += instance.OnStrafeRight;
            @TurnLeft.started += instance.OnTurnLeft;
            @TurnLeft.performed += instance.OnTurnLeft;
            @TurnLeft.canceled += instance.OnTurnLeft;
            @TurnRight.started += instance.OnTurnRight;
            @TurnRight.performed += instance.OnTurnRight;
            @TurnRight.canceled += instance.OnTurnRight;
            @FreeLook.started += instance.OnFreeLook;
            @FreeLook.performed += instance.OnFreeLook;
            @FreeLook.canceled += instance.OnFreeLook;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
        }

        private void UnregisterCallbacks(ITravelActions instance)
        {
            @Forward.started -= instance.OnForward;
            @Forward.performed -= instance.OnForward;
            @Forward.canceled -= instance.OnForward;
            @Backward.started -= instance.OnBackward;
            @Backward.performed -= instance.OnBackward;
            @Backward.canceled -= instance.OnBackward;
            @StrafeLeft.started -= instance.OnStrafeLeft;
            @StrafeLeft.performed -= instance.OnStrafeLeft;
            @StrafeLeft.canceled -= instance.OnStrafeLeft;
            @StrafeRight.started -= instance.OnStrafeRight;
            @StrafeRight.performed -= instance.OnStrafeRight;
            @StrafeRight.canceled -= instance.OnStrafeRight;
            @TurnLeft.started -= instance.OnTurnLeft;
            @TurnLeft.performed -= instance.OnTurnLeft;
            @TurnLeft.canceled -= instance.OnTurnLeft;
            @TurnRight.started -= instance.OnTurnRight;
            @TurnRight.performed -= instance.OnTurnRight;
            @TurnRight.canceled -= instance.OnTurnRight;
            @FreeLook.started -= instance.OnFreeLook;
            @FreeLook.performed -= instance.OnFreeLook;
            @FreeLook.canceled -= instance.OnFreeLook;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
        }

        public void RemoveCallbacks(ITravelActions instance)
        {
            if (m_Wrapper.m_TravelActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITravelActions instance)
        {
            foreach (var item in m_Wrapper.m_TravelActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TravelActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TravelActions @Travel => new TravelActions(this);

    // Battle
    private readonly InputActionMap m_Battle;
    private List<IBattleActions> m_BattleActionsCallbackInterfaces = new List<IBattleActions>();
    private readonly InputAction m_Battle_Confirm;
    private readonly InputAction m_Battle_Cancel;
    private readonly InputAction m_Battle_Pause;
    private readonly InputAction m_Battle_SelectNext;
    private readonly InputAction m_Battle_SelectPrevious;
    private readonly InputAction m_Battle_MouseScrollDown;
    private readonly InputAction m_Battle_MouseScrollUp;
    public struct BattleActions
    {
        private @PlayerControls m_Wrapper;
        public BattleActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Confirm => m_Wrapper.m_Battle_Confirm;
        public InputAction @Cancel => m_Wrapper.m_Battle_Cancel;
        public InputAction @Pause => m_Wrapper.m_Battle_Pause;
        public InputAction @SelectNext => m_Wrapper.m_Battle_SelectNext;
        public InputAction @SelectPrevious => m_Wrapper.m_Battle_SelectPrevious;
        public InputAction @MouseScrollDown => m_Wrapper.m_Battle_MouseScrollDown;
        public InputAction @MouseScrollUp => m_Wrapper.m_Battle_MouseScrollUp;
        public InputActionMap Get() { return m_Wrapper.m_Battle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BattleActions set) { return set.Get(); }
        public void AddCallbacks(IBattleActions instance)
        {
            if (instance == null || m_Wrapper.m_BattleActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BattleActionsCallbackInterfaces.Add(instance);
            @Confirm.started += instance.OnConfirm;
            @Confirm.performed += instance.OnConfirm;
            @Confirm.canceled += instance.OnConfirm;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @SelectNext.started += instance.OnSelectNext;
            @SelectNext.performed += instance.OnSelectNext;
            @SelectNext.canceled += instance.OnSelectNext;
            @SelectPrevious.started += instance.OnSelectPrevious;
            @SelectPrevious.performed += instance.OnSelectPrevious;
            @SelectPrevious.canceled += instance.OnSelectPrevious;
            @MouseScrollDown.started += instance.OnMouseScrollDown;
            @MouseScrollDown.performed += instance.OnMouseScrollDown;
            @MouseScrollDown.canceled += instance.OnMouseScrollDown;
            @MouseScrollUp.started += instance.OnMouseScrollUp;
            @MouseScrollUp.performed += instance.OnMouseScrollUp;
            @MouseScrollUp.canceled += instance.OnMouseScrollUp;
        }

        private void UnregisterCallbacks(IBattleActions instance)
        {
            @Confirm.started -= instance.OnConfirm;
            @Confirm.performed -= instance.OnConfirm;
            @Confirm.canceled -= instance.OnConfirm;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @SelectNext.started -= instance.OnSelectNext;
            @SelectNext.performed -= instance.OnSelectNext;
            @SelectNext.canceled -= instance.OnSelectNext;
            @SelectPrevious.started -= instance.OnSelectPrevious;
            @SelectPrevious.performed -= instance.OnSelectPrevious;
            @SelectPrevious.canceled -= instance.OnSelectPrevious;
            @MouseScrollDown.started -= instance.OnMouseScrollDown;
            @MouseScrollDown.performed -= instance.OnMouseScrollDown;
            @MouseScrollDown.canceled -= instance.OnMouseScrollDown;
            @MouseScrollUp.started -= instance.OnMouseScrollUp;
            @MouseScrollUp.performed -= instance.OnMouseScrollUp;
            @MouseScrollUp.canceled -= instance.OnMouseScrollUp;
        }

        public void RemoveCallbacks(IBattleActions instance)
        {
            if (m_Wrapper.m_BattleActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBattleActions instance)
        {
            foreach (var item in m_Wrapper.m_BattleActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BattleActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BattleActions @Battle => new BattleActions(this);
    public interface ITravelActions
    {
        void OnForward(InputAction.CallbackContext context);
        void OnBackward(InputAction.CallbackContext context);
        void OnStrafeLeft(InputAction.CallbackContext context);
        void OnStrafeRight(InputAction.CallbackContext context);
        void OnTurnLeft(InputAction.CallbackContext context);
        void OnTurnRight(InputAction.CallbackContext context);
        void OnFreeLook(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface IBattleActions
    {
        void OnConfirm(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnSelectNext(InputAction.CallbackContext context);
        void OnSelectPrevious(InputAction.CallbackContext context);
        void OnMouseScrollDown(InputAction.CallbackContext context);
        void OnMouseScrollUp(InputAction.CallbackContext context);
    }
}
